birthday      problem solve

function birthdayCakeCandles($ar) {


$count=0;
     //$arr= array( 3, 2, 1, 3);

        $b = $ar[0];
       
        for($i=0;$i<count($ar);$i++)
        {
            if ($ar[$i] > $b)
            {
               $b=$ar[$i]; 
               $count=1;
            }
            else if($b==$ar[$i]){
                  $count++;
            }
        }
        return $count;

}



 $hour=explode(":",$s);
  $hh=0;
$hour[2];

    if(stripos($hour[2], "AM")){
        
          if($hour[0]=="12"){
                $hh="00";   
          }
          else {
              $hh=$hour[0];
          }
    } if(stripos($hour[2], "PM")){
        if($hour[0]<12)
                $hh=$hour[0]+12;  
        else{
            $hh=12;
            }
    }

        
        return $hh.':'.$hour[1].':'.substr_replace($hour[2] ,"", -2); 



function countApplesAndOranges($s, $t, $a, $b, $apples, $oranges) {
  $sum=0;
  $count=0;
  foreach( $apples  as $key=>$value){
      $sum=$value+$a;
      //echo $sum; 
     if($sum >=$s && $sum <=$t){
      $count++;
     }

  }
  echo $count;
  echo  PHP_EOL;

$count=0;
$orangesum=0;
  foreach( $oranges as $key=>$value){
     $orangesum = $value +$b;
     if($orangesum >= $s && $orangesum <= $t  ){
         $count++;
     }
  }
  echo $count;

}




<?php

// Complete the breakingRecords function below.
function breakingRecords($scores) {
    
$temp=$scores[0];
$max=0;

$temp1=$scores[0];
$min=0;


foreach($scores as $x)
{
    if($x>$temp)
    {
        $temp=$x;
        $max++;
    }

     if($x<$temp1)
    {
        $temp1=$x;
        $min++;

    }
}

return [$max,  $min];

    
}

$fptr = fopen(getenv("OUTPUT_PATH"), "w");

$stdin = fopen("php://stdin", "r");

fscanf($stdin, "%d\n", $n);

fscanf($stdin, "%[^\n]", $scores_temp);

$scores = array_map('intval', preg_split('/ /', $scores_temp, -1, PREG_SPLIT_NO_EMPTY));

$result = breakingRecords($scores);

fwrite($fptr, implode(" ", $result) . "\n");

fclose($stdin);
fclose($fptr);


        
#Divisible Sum Pairs

function divisibleSumPairs($n, $k, $ar) {
    
    $sum=0;
  $counts=0;

    for($i=0; $i<($n-1); $i++){
        
      for($j=1; $j<($n); $j++) 
        {  
           

           if( $i < $j){

             if((($ar[$i]+$ar[$j])% $k) == 0){

             $counts++;
            }
      }
    }
    }
    return $counts;

}
